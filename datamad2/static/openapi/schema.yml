swagger: '2.0'
info:
  description: DataMAD API
  version: 1.0.0
  title: Swagger DataMAD
  contact:
    email: eleanor.smith@stfc.ac.uk
host: 127.0.0.1:8000
basePath: /
consumes:
  - application/json
produces:
  - applcation/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
tags:
  - name: grants
    description: Information about Grants
  - name: importedgrants
    description: Information about Imported Grants
  - name: users
    description: Information about users of DataMAD
schemes:
  - http
paths:
  /grants/:
    get:
      tags:
        - grants
      summary: Find grants by page number, assigned data centre or grant references.
      description: ''
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: query
          type: string
          name: page
          #required: true
        - in: query
          type: array
          collectionFormat: csv
          name: grant_ref
          description: Grant reference of the grant you want to find.
          items:
            type: string
          #required: true
        - in: query
          name: assigned_data_centre
          description: Data centres to filter by
          #required: true
          type: array
          items:
            type: string
            enum:
              - BODC
              - CEDA
              - EIDC
              - NGDC
              - PDC
              - ADS
              - None
            default: None
          collectionFormat: multi
      responses:
        '405':
          description: Invalid input
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Grant'

    put:
      tags:
        - grants
      summary: Update an existing grant by grant reference
      description: ''
      operationId: updateGrant
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: query
          name: grant_ref
          description: Grant reference of grant to update
          required: true
          type: string
        - in: body
          name: body
          description: Grant object to be updated
          required: true
          schema:
            $ref: '#/definitions/Grant'
      responses:
        '400':
          description: Invalid grant reference supplied
        '404':
          description: Grant not found
        '405':
          description: Validation exception

  /grants/{id}/:
    get:
      tags:
      - grants
      summary: Find grant by id
      produces:
        - application/json
        - application/xml
      operationId: findGrantById
      parameters:
      - in: path
        type: integer
        name: id
        required: true
      responses:
        '400':
          description: Invalid ID supplied

    delete:
      tags:
      - grants
      summary: Delete grant by id
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      operationId: grants_delete
      parameters:
      - in: path
        type: integer
        name: id
        required: true
      responses:
        '400':
          description: Invalid ID supplied




  /importedgrants/:
    get:
      tags:
        - importedgrants
      summary: Find an imported grant
      description: ''
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: query
          type: string
          name: page
          required: true
      responses:
        '405':
          description: Invalid input
    post:
      tags:
        - importedgrants
      summary: Add a new imported grant
      description: ''
      operationId: addImportedGrant
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Imported grant object to be added
          required: true
          schema:
            $ref: '#/definitions/ImportedGrant'
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - importedgrants
      summary: Update an existing imported grant
      description: ''
      operationId: updateImportedGrant
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Imported grant object to be edited
          required: true
          schema:
            $ref: '#/definitions/ImportedGrant'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Grant not found
        '405':
          description: Validation exception
  /users:
    post:
      tags:
        - users
      summary: Create user
      description: This can only be done when a user with admin rights is logged in.
      operationId: createUser
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /users/accounts/login:
    get:
      tags:
        - users
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/json
        - application/xml
      parameters:
        - name: username
          in: query
          description: The email address for the user.
          required: true
          type: string
          format: email
        - name: password
          in: query
          description: The password for the user.
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
  /users/accounts/logout:
    get:
      tags:
        - users
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/json
        - application/xml
      parameters: []
      responses:
        default:
          description: successful operation
  '/users/{emailAddress}':
    get:
      tags:
        - users
      summary: Get user by email address
      description: ''
      operationId: getUserByEmailAddress
      produces:
        - application/json
        - application/xml
      parameters:
        - name: emailAddress
          in: path
          description: 'The email address of the user that needs to be fetched '
          required: true
          type: string
          format: email
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid email address supplied
        '404':
          description: User not found
    put:
      tags:
        - users
      summary: Update user
      description: This can only be done when a user with admin rights is logged in.
      operationId: updateUser
      produces:
        - application/json
        - application/xml
      parameters:
        - name: emailAddress
          in: path
          description: name that need to be updated
          required: true
          type: string
          format: email
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - users
      summary: Delete user
      description: This can only be done when a user with admin rights is logged in.
      operationId: deleteUser
      produces:
        - application/json
        - application/xml
      parameters:
        - name: emailAddress
          in: path
          description: The email address of the user that needs to be deleted
          required: true
          type: string
          format: email
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found

definitions:
  Grant:
    type: object
    required:
      - grant_ref
    properties:
      grant_ref:
        type: string
        pattern: '^\d{2}/\d{7}/\d{1}$'
        example: NE/I076542/1
      alt_data_contact_email:
        type: string
        format: email
        example: user@example.ac.uk
      alt_data_contact_phone:
        type: string
      assigned_data_centre:
        type: string
        enum:
          - BODC
          - CEDA
          - EIDC
          - NGDC
          - PDC
          - ADS
          - None
      other_data_centre:
        type: string
        enum:
          - BODC
          - CEDA
          - EIDC
          - NGDC
          - PDC
          - ADS
          - None
        example: CEDA
      hide_record:
        type: boolean
        default: 'False'
      date_contacted_pi:
        type: string
        format: date
      will_grant_produce_data:
        type: boolean
        default: None
      datasets_delivered:
        type: boolean
        default: None
      sanctions_recommended:
        type: boolean
        default: None
      case_for_support_found:
        type: boolean
        default: None
    xml:
      name: Grant
  ImportedGrant:
    type: object
    required:
      - title
      - grant_ref
    properties:
      title:
        type: string
        example: Climate Hazard
      grant_ref:
        type: string
        pattern: '^\d{2}/\d{7}/\d{1}$'
        example: NE/I076542/1
      grant_status:
        type: string
        enum:
          - Active
          - Closed
      amount_awarded:
        type: integer
        format: int32
        example: '50000'
      grant_type:
        type: string
      scheme:
        type: string
      lead_grant:
        type: boolean
      parent_grant:
        type: string
        format: uri
        example: http://127.0.0.1:8000/grants/1/
      grant_holder:
        type: string
        example: Professor Example
      department:
        type: string
      research_org:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      post_code:
        type: string
      email:
        type: string
        format: email
      work_number:
        type: string
      data_contact_email:
        type: string
        format: email
      data_contact_phone:
        type: string
      routing_classification:
        type: string
        enum:
          - Marine
          - Earth
          - Atmospheric
          - Freshwater
          - Terrestrial
          - Earth Observation
      secondary_classification:
        type: string
      science_area:
        type: string
      ncas:
        type: string
        enum:
          - Yes
          - No
      nceo:
        type: string
        enum:
          - Yes
          - No
      comments:
        type: string
      proposed_start_date:
        type: string
        format: date
      proposed_end_date:
        type: string
        format: date
      actual_start_date:
        type: string
        format: date
      actual_end_date:
        type: string
        format: date
      abstract:
        type: string
      objectives:
        type: string
    xml:
      name: Imported Grant
  User:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
        format: email
      password:
        type: string
      data_centre:
        type: string
        enum:
          - BODC
          - CEDA
          - EIDC
          - NGDC
          - PDC
          - ADS
      is_admin:
        type: boolean
        default: 'False'
    xml:
      name: User