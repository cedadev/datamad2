from django.db import models

from django.contrib.contenttypes.fields import GenericRelation, GenericForeignKey

class Project(models.Model):

    # Projects are activities under funding programmes that are examined
    # for their data management needs.

    title = models.CharField(max_length=200)
    date_added = models.DateTimeField(auto_now_add=True)
    desc = models.TextField(blank=True, null=True, verbose_name="Description")
    #notes = GenericRelation("Note")
    data_activities = models.TextField(blank=True, null=True, help_text="Short description of data generation activities. eg Data will be collected by FAAM aircraft/ground instruments. Are there intensive measurement campaigns?")
    startdate = models.DateField(blank=True, null=True,verbose_name="Start Date",help_text="Date format dd/mm/yyyy")
    enddate = models.DateField(blank=True, null=True,verbose_name="End Date",help_text="Date format dd/mm/yyyy")
    dmp_agreed = models.DateField(blank=True, null=True, verbose_name="DMP Agreed",help_text="Date format dd/mm/yyyy")
    initial_contact = models.DateField(blank=True, null=True, verbose_name="Initial Contact",help_text="Date format dd/mm/yyyy")
    #sciSupContact = models.ForeignKey(Person, help_text="CEDA person contact for this Project", blank=True, null=True)
    #sciSupContact2 = models.ForeignKey(Person, help_text="CEDA person contact for this Project", blank=True, null=True, related_name="sciSupContact2s")
    PI = models.CharField(max_length=200, blank=True, null=True)
    PIemail = models.EmailField(max_length=200, blank=True, null=True)
    PIinst = models.CharField(max_length=200, blank=True, null=True)
    Contact1 = models.CharField(max_length=200, blank=True, null=True)
    Contact2 = models.CharField(max_length=200, blank=True, null=True)
    projectcost = models.IntegerField(blank=True, null=True)
    services = models.TextField(blank=True, null=True)
    primary_dataCentre = models.CharField(max_length=200,blank=True, null=True, verbose_name="Primary Datacentre")
    other_dataCentres = models.CharField(max_length=200, blank=True, null=True, verbose_name="Other Datacentres")
    status = models.CharField(max_length=200, blank=True, null=True,
            choices=(("Proposal","Proposal"),
                 ("NotFunded","Not Funded"),
                 ("NotStarted","Not Started"),
                 ("Active","Active"),
                 ("NoData","No Data"),
                 ("EndedWithDataToCome","Ended with data to come"),
                 ("Defaulted","Defaulted"),
                 ("NoDataForUs","No data for us"),
                 ("Complete","Complete"),
                 ("Unresponsive", "Unresponsive"),
                 ("MergedProject/HandledElsewhere", "Merged Project/Handled Elsewhere"),
                     ))
    project_status = models.CharField(max_length=200, blank=True, null=True,
            choices=(("InitialContact", "Initial contact"),
                 ("DMPComms","DMP comms"),
                 ("Progress","Progress"),
                 ("DataDelivery", "Data delivery"),
                     ))
    modified = models.DateTimeField(auto_now=True)
    #third_party_data = models.ManyToManyField('DataProduct', related_name='requirements+',
                        #blank=True, null=True)
    # vms = models.ManyToManyField(VM, blank=True, null=True)
    # groupworkspaces = models.ManyToManyField(GWS, blank=True, null=True)
    project_URL = models.URLField(blank=True, null=True)
    dmp_URL = models.URLField(blank=True, null=True, verbose_name="DMP URL")
    ODMP_URL = models.URLField(blank=True,null=True, help_text="Outline DMP URL autogenerated when using grant uploader, essentially a best guess. Edit as necessary.")
    moles_URL = models.URLField(blank=True,null=True)
    helpscout_url = models.URLField(blank=True, null=True, verbose_name="OpMan URL")
    project_usergroup = models.CharField(max_length=200, blank=True, null=True, help_text="Group name for registration for this group")
    #metadata_form = GenericRelation("MetadataForm")
    reassigned = models.BooleanField(default=False)